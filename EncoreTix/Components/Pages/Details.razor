@page "/details/{name}"
@inject TicketMasterService TicketMasterService
@inject AttractionEventDTO AttractionEventDTO
@inject NavigationManager NavigationManager

<div class="attraction-event-header">
    <Button Class="back-button" @onclick="GoBack"><p>Go Back</p></Button>
</div>

@if ( display )
{
    <div class="attraction-container">
        <div class="details-header">
            <Image Class="attraction-header-image" Src="@imageUrl" />                      
        </div>
        <div class="details-sub-header">
            <h3 id="details-sub-header-left-item">@Name</h3>
            @if(eventVmList != null )
            {
                <div id="social-media">
                    <a href="@(eventVmList?.FirstOrDefault().HomePageUrl.DefaultIfEmpty())"><Image Src="website-icon.png" /></a>
                    <a href="@(eventVmList?.FirstOrDefault().LastFmUrl.DefaultIfEmpty())"><Image Src="lastfm-icon.png" /></a>
                    <a href="@(eventVmList?.FirstOrDefault().YouTubeUrl.DefaultIfEmpty())"><Image Src="youtube-icon.png" /></a>
                    <a href="@(eventVmList?.FirstOrDefault().TwitterUrl.DefaultIfEmpty())"><Image Src="twitter-icon.png" /></a>
                </div>
            }            
        </div>
        <div class="details-list">
            @foreach( var em in eventVmList )
            {
                <div class="search-result">
                    <Image Class="venue-image" Src="@em.ImageUrl" />
                    <div>
                        <ul style="list-style-type: none;">
                            <li><p>@em.StartDate.ToString("D")</p></li>
                            <li><h4>@em.Name</h4></li>
                            <li><p>@($"{em.Venue}, {em.Location}")</p></li>
                        </ul>
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <div id="no-results">
        <Image Src="noresults.png" Id="no-results-image" />
    </div>
}

@code {
    [Parameter]
    public string Name { get; set; } = string.Empty;
    private AttractionEvent AttractionEvent { get; set; } = new();
    private List<EventViewModel>? eventVmList = new();
    bool display = true;
    private string imageUrl = string.Empty;

    protected override async Task OnInitializedAsync( )
    {
        AttractionEvent = await TicketMasterService.GetAttractionEventAsync( Name );
        imageUrl = AttractionEvent.Embedded.Events.SelectMany(e => e.Images).First().Url;
        eventVmList = AttractionEventDTO.ConvertToEventVmListDTO(AttractionEvent);
        if ( eventVmList.Count == 0 )
        {
            display = false;
        }        
    }

    public void GoBack()
    {
        NavigationManager.NavigateTo( "/" );
    }
}
